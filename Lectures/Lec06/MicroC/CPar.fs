// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "Lectures/Lec06/MicroC/CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)

open Absyn

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10

# 19 "Lectures/Lec06/MicroC/CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | NOT  -> 11 
  | SEQOR  -> 12 
  | SEQAND  -> 13 
  | EQ  -> 14 
  | NE  -> 15 
  | GT  -> 16 
  | LT  -> 17 
  | GE  -> 18 
  | LE  -> 19 
  | PLUS  -> 20 
  | MINUS  -> 21 
  | TIMES  -> 22 
  | DIV  -> 23 
  | MOD  -> 24 
  | CHAR  -> 25 
  | ELSE  -> 26 
  | IF  -> 27 
  | INT  -> 28 
  | NULL  -> 29 
  | PRINT  -> 30 
  | PRINTLN  -> 31 
  | RETURN  -> 32 
  | VOID  -> 33 
  | WHILE  -> 34 
  | FOR  -> 35 
  | CSTSTRING _ -> 36 
  | NAME _ -> 37 
  | CSTINT _ -> 38 
  | CSTBOOL _ -> 39 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_NOT 
  | 12 -> TOKEN_SEQOR 
  | 13 -> TOKEN_SEQAND 
  | 14 -> TOKEN_EQ 
  | 15 -> TOKEN_NE 
  | 16 -> TOKEN_GT 
  | 17 -> TOKEN_LT 
  | 18 -> TOKEN_GE 
  | 19 -> TOKEN_LE 
  | 20 -> TOKEN_PLUS 
  | 21 -> TOKEN_MINUS 
  | 22 -> TOKEN_TIMES 
  | 23 -> TOKEN_DIV 
  | 24 -> TOKEN_MOD 
  | 25 -> TOKEN_CHAR 
  | 26 -> TOKEN_ELSE 
  | 27 -> TOKEN_IF 
  | 28 -> TOKEN_INT 
  | 29 -> TOKEN_NULL 
  | 30 -> TOKEN_PRINT 
  | 31 -> TOKEN_PRINTLN 
  | 32 -> TOKEN_RETURN 
  | 33 -> TOKEN_VOID 
  | 34 -> TOKEN_WHILE 
  | 35 -> TOKEN_FOR 
  | 36 -> TOKEN_CSTSTRING 
  | 37 -> TOKEN_NAME 
  | 38 -> TOKEN_CSTINT 
  | 39 -> TOKEN_CSTBOOL 
  | 42 -> TOKEN_end_of_input
  | 40 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_Block 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_StmtOrDecSeq 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_Stmt 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtU 
    | 33 -> NONTERM_StmtU 
    | 34 -> NONTERM_StmtU 
    | 35 -> NONTERM_Expr 
    | 36 -> NONTERM_Expr 
    | 37 -> NONTERM_ExprNotAccess 
    | 38 -> NONTERM_ExprNotAccess 
    | 39 -> NONTERM_ExprNotAccess 
    | 40 -> NONTERM_ExprNotAccess 
    | 41 -> NONTERM_ExprNotAccess 
    | 42 -> NONTERM_ExprNotAccess 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_AtExprNotAccess 
    | 57 -> NONTERM_AtExprNotAccess 
    | 58 -> NONTERM_AtExprNotAccess 
    | 59 -> NONTERM_Access 
    | 60 -> NONTERM_Access 
    | 61 -> NONTERM_Access 
    | 62 -> NONTERM_Access 
    | 63 -> NONTERM_Access 
    | 64 -> NONTERM_Exprs 
    | 65 -> NONTERM_Exprs 
    | 66 -> NONTERM_Exprs1 
    | 67 -> NONTERM_Exprs1 
    | 68 -> NONTERM_Const 
    | 69 -> NONTERM_Const 
    | 70 -> NONTERM_Const 
    | 71 -> NONTERM_Const 
    | 72 -> NONTERM_Type 
    | 73 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 42 
let _fsyacc_tagOfErrorTerminal = 40

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us;65535us;1us;65535us;0us;1us;2us;65535us;0us;2us;4us;5us;2us;65535us;0us;4us;4us;4us;8us;65535us;0us;6us;4us;6us;25us;34us;29us;34us;35us;34us;37us;44us;42us;44us;45us;44us;4us;65535us;9us;11us;10us;11us;14us;15us;16us;17us;2us;65535us;0us;8us;4us;8us;2us;65535us;25us;26us;29us;30us;3us;65535us;25us;33us;29us;33us;35us;36us;12us;65535us;27us;28us;31us;32us;37us;56us;42us;56us;45us;56us;63us;56us;64us;56us;66us;56us;67us;56us;75us;56us;76us;56us;86us;56us;3us;65535us;37us;38us;42us;43us;45us;46us;4us;65535us;37us;42us;42us;42us;45us;42us;64us;89us;10us;65535us;37us;47us;42us;47us;45us;47us;63us;65us;64us;48us;66us;68us;67us;68us;75us;77us;76us;77us;86us;87us;6us;65535us;37us;49us;42us;49us;45us;49us;64us;49us;67us;88us;76us;90us;38us;65535us;37us;40us;42us;50us;45us;50us;52us;54us;59us;62us;60us;61us;63us;50us;64us;50us;66us;50us;67us;50us;71us;74us;72us;73us;75us;50us;76us;50us;79us;80us;81us;82us;83us;84us;86us;50us;96us;97us;99us;122us;102us;103us;104us;105us;123us;107us;124us;108us;125us;109us;126us;110us;127us;111us;128us;112us;129us;113us;130us;114us;131us;115us;132us;116us;133us;117us;134us;118us;135us;120us;137us;119us;148us;121us;151us;122us;38us;65535us;37us;93us;42us;93us;45us;93us;52us;93us;59us;93us;60us;93us;63us;93us;64us;93us;66us;93us;67us;93us;71us;93us;72us;93us;75us;93us;76us;93us;79us;93us;81us;93us;83us;93us;86us;93us;96us;93us;99us;93us;102us;93us;104us;93us;123us;93us;124us;93us;125us;93us;126us;93us;127us;93us;128us;93us;129us;93us;130us;93us;131us;93us;132us;93us;133us;93us;134us;93us;135us;93us;137us;94us;148us;93us;151us;93us;39us;65535us;37us;95us;42us;95us;45us;95us;52us;95us;59us;95us;60us;95us;63us;95us;64us;95us;66us;95us;67us;95us;71us;95us;72us;95us;75us;95us;76us;95us;79us;95us;81us;95us;83us;95us;86us;95us;96us;95us;99us;95us;102us;95us;104us;95us;123us;95us;124us;95us;125us;95us;126us;95us;127us;95us;128us;95us;129us;95us;130us;95us;131us;95us;132us;95us;133us;95us;134us;95us;135us;95us;137us;95us;145us;147us;148us;95us;151us;95us;41us;65535us;37us;92us;42us;92us;45us;92us;52us;92us;59us;92us;60us;92us;63us;92us;64us;92us;66us;92us;67us;92us;71us;92us;72us;92us;75us;92us;76us;92us;79us;92us;81us;92us;83us;92us;86us;92us;96us;92us;99us;92us;102us;92us;104us;92us;123us;92us;124us;92us;125us;92us;126us;92us;127us;92us;128us;92us;129us;92us;130us;92us;131us;92us;132us;92us;133us;92us;134us;92us;135us;92us;137us;91us;139us;140us;142us;143us;145us;146us;148us;92us;151us;92us;1us;65535us;99us;100us;2us;65535us;99us;150us;151us;152us;39us;65535us;37us;136us;42us;136us;45us;136us;52us;136us;59us;136us;60us;136us;63us;136us;64us;136us;66us;136us;67us;136us;71us;136us;72us;136us;75us;136us;76us;136us;79us;136us;81us;136us;83us;136us;86us;136us;96us;136us;99us;136us;102us;136us;104us;136us;123us;136us;124us;136us;125us;136us;126us;136us;127us;136us;128us;136us;129us;136us;130us;136us;131us;136us;132us;136us;133us;136us;134us;136us;135us;136us;137us;136us;145us;136us;148us;136us;151us;136us;8us;65535us;0us;10us;4us;10us;25us;9us;29us;9us;35us;9us;37us;9us;42us;9us;45us;9us;|]
let _fsyacc_sparseGotoTableRowOffsets = [|0us;1us;3us;6us;9us;18us;23us;26us;29us;33us;46us;50us;55us;66us;73us;112us;151us;191us;233us;235us;238us;278us;|]
let _fsyacc_stateToProdIdxsTableElements = [| 1us;0us;1us;0us;1us;1us;1us;1us;1us;3us;1us;3us;1us;4us;1us;4us;1us;5us;1us;6us;2us;6us;13us;3us;6us;10us;11us;1us;7us;2us;7us;13us;1us;8us;3us;8us;10us;11us;1us;9us;3us;9us;10us;11us;1us;9us;2us;10us;11us;1us;10us;1us;11us;1us;11us;1us;12us;1us;12us;1us;12us;1us;12us;1us;12us;1us;12us;1us;13us;1us;13us;1us;13us;1us;13us;1us;15us;2us;16us;17us;1us;17us;1us;17us;2us;18us;19us;1us;18us;1us;18us;15us;19us;25us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;1us;19us;1us;21us;1us;21us;1us;22us;1us;22us;1us;22us;1us;23us;3us;23us;29us;32us;1us;24us;14us;25us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;1us;25us;2us;26us;27us;1us;26us;14us;27us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;1us;27us;1us;28us;1us;29us;3us;29us;32us;33us;1us;29us;3us;29us;32us;33us;16us;29us;32us;33us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;14us;29us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;1us;29us;3us;29us;32us;33us;1us;29us;1us;29us;2us;29us;32us;1us;29us;1us;30us;2us;30us;34us;1us;30us;2us;30us;34us;15us;30us;34us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;14us;30us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;1us;30us;2us;30us;34us;1us;30us;1us;31us;1us;31us;14us;31us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;1us;31us;14us;31us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;1us;31us;14us;31us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;1us;31us;1us;31us;1us;31us;1us;32us;1us;33us;1us;34us;4us;35us;38us;60us;63us;3us;35us;38us;63us;1us;36us;2us;36us;57us;1us;37us;1us;38us;14us;38us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;2us;39us;59us;1us;39us;1us;39us;1us;39us;1us;40us;14us;40us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;1us;41us;14us;41us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;1us;42us;14us;43us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;14us;43us;44us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;14us;43us;44us;45us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;14us;43us;44us;45us;46us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;14us;43us;44us;45us;46us;47us;47us;48us;49us;50us;51us;52us;53us;54us;55us;14us;43us;44us;45us;46us;47us;48us;48us;49us;50us;51us;52us;53us;54us;55us;14us;43us;44us;45us;46us;47us;48us;49us;49us;50us;51us;52us;53us;54us;55us;14us;43us;44us;45us;46us;47us;48us;49us;50us;50us;51us;52us;53us;54us;55us;14us;43us;44us;45us;46us;47us;48us;49us;50us;51us;51us;52us;53us;54us;55us;14us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;52us;53us;54us;55us;14us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;53us;54us;55us;14us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;54us;55us;13us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;14us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;55us;14us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;63us;15us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;66us;67us;1us;43us;1us;44us;1us;45us;1us;46us;1us;47us;1us;48us;1us;49us;1us;50us;1us;51us;1us;52us;1us;53us;1us;54us;1us;55us;1us;56us;2us;57us;60us;1us;57us;1us;58us;2us;58us;63us;1us;59us;1us;60us;2us;60us;63us;1us;60us;2us;61us;62us;2us;61us;63us;1us;62us;1us;63us;1us;63us;1us;65us;1us;67us;1us;67us;1us;68us;1us;69us;1us;70us;1us;70us;1us;71us;1us;72us;1us;73us;|]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us;2us;4us;6us;8us;10us;12us;14us;16us;18us;20us;23us;27us;29us;32us;34us;38us;40us;44us;46us;49us;51us;53us;55us;57us;59us;61us;63us;65us;67us;69us;71us;73us;75us;77us;80us;82us;84us;87us;89us;91us;107us;109us;111us;113us;115us;117us;119us;121us;125us;127us;142us;144us;147us;149us;164us;166us;168us;170us;174us;176us;180us;197us;212us;214us;218us;220us;222us;225us;227us;229us;232us;234us;237us;253us;268us;270us;273us;275us;277us;279us;294us;296us;311us;313us;328us;330us;332us;334us;336us;338us;340us;345us;349us;351us;354us;356us;358us;373us;376us;378us;380us;382us;384us;399us;401us;416us;418us;433us;448us;463us;478us;493us;508us;523us;538us;553us;568us;583us;598us;612us;627us;642us;658us;660us;662us;664us;666us;668us;670us;672us;674us;676us;678us;680us;682us;684us;686us;689us;691us;693us;696us;698us;700us;703us;705us;708us;711us;713us;715us;717us;719us;721us;723us;725us;727us;729us;731us;733us;735us;|]
let _fsyacc_action_rows = 160
let _fsyacc_actionTableElements = [|3us;16386us;25us;159us;28us;158us;33us;23us;0us;49152us;1us;32768us;0us;3us;0us;16385us;3us;16386us;25us;159us;28us;158us;33us;23us;0us;16387us;1us;32768us;7us;7us;0us;16388us;0us;16389us;3us;32768us;1us;16us;22us;14us;37us;12us;3us;32768us;1us;16us;22us;14us;37us;13us;1us;16390us;5us;19us;0us;16391us;1us;16391us;1us;29us;3us;32768us;1us;16us;22us;14us;37us;12us;1us;16392us;5us;19us;3us;32768us;1us;16us;22us;14us;37us;12us;2us;32768us;2us;18us;5us;19us;0us;16393us;2us;32768us;6us;20us;38us;21us;0us;16394us;1us;32768us;6us;22us;0us;16395us;1us;32768us;37us;24us;1us;32768us;1us;25us;2us;16398us;25us;159us;28us;158us;1us;32768us;2us;27us;1us;32768us;3us;37us;0us;16396us;2us;16398us;25us;159us;28us;158us;1us;32768us;2us;31us;1us;32768us;3us;37us;0us;16397us;0us;16399us;1us;16400us;8us;35us;2us;32768us;25us;159us;28us;158us;0us;16401us;18us;16404us;1us;137us;3us;37us;10us;139us;11us;102us;21us;155us;22us;145us;25us;159us;27us;58us;28us;158us;29us;157us;30us;104us;31us;106us;32us;52us;34us;70us;35us;78us;37us;98us;38us;153us;39us;154us;1us;32768us;4us;39us;0us;16402us;15us;32768us;4us;41us;7us;51us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;0us;16403us;18us;16404us;1us;137us;3us;37us;10us;139us;11us;102us;21us;155us;22us;145us;25us;159us;27us;58us;28us;158us;29us;157us;30us;104us;31us;106us;32us;52us;34us;70us;35us;78us;37us;98us;38us;153us;39us;154us;0us;16405us;1us;32768us;7us;45us;18us;16404us;1us;137us;3us;37us;10us;139us;11us;102us;21us;155us;22us;145us;25us;159us;27us;58us;28us;158us;29us;157us;30us;104us;31us;106us;32us;52us;34us;70us;35us;78us;37us;98us;38us;153us;39us;154us;0us;16406us;0us;16407us;1us;16407us;26us;67us;0us;16408us;14us;32768us;7us;51us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;0us;16409us;12us;32768us;1us;137us;7us;53us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;0us;16410us;14us;32768us;7us;55us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;0us;16411us;0us;16412us;1us;32768us;1us;59us;1us;32768us;1us;60us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;14us;32768us;2us;64us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;14us;32768us;2us;63us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;16us;32768us;1us;137us;3us;37us;10us;139us;11us;102us;21us;155us;22us;145us;27us;57us;29us;157us;30us;104us;31us;106us;32us;52us;34us;69us;35us;78us;37us;98us;38us;153us;39us;154us;16us;32768us;1us;137us;3us;37us;10us;139us;11us;102us;21us;155us;22us;145us;27us;58us;29us;157us;30us;104us;31us;106us;32us;52us;34us;70us;35us;78us;37us;98us;38us;153us;39us;154us;1us;32768us;26us;66us;16us;32768us;1us;137us;3us;37us;10us;139us;11us;102us;21us;155us;22us;145us;27us;57us;29us;157us;30us;104us;31us;106us;32us;52us;34us;69us;35us;78us;37us;98us;38us;153us;39us;154us;16us;32768us;1us;137us;3us;37us;10us;139us;11us;102us;21us;155us;22us;145us;27us;58us;29us;157us;30us;104us;31us;106us;32us;52us;34us;70us;35us;78us;37us;98us;38us;153us;39us;154us;0us;16413us;1us;32768us;1us;71us;1us;32768us;1us;72us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;14us;32768us;2us;76us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;14us;32768us;2us;75us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;16us;32768us;1us;137us;3us;37us;10us;139us;11us;102us;21us;155us;22us;145us;27us;57us;29us;157us;30us;104us;31us;106us;32us;52us;34us;69us;35us;78us;37us;98us;38us;153us;39us;154us;16us;32768us;1us;137us;3us;37us;10us;139us;11us;102us;21us;155us;22us;145us;27us;58us;29us;157us;30us;104us;31us;106us;32us;52us;34us;70us;35us;78us;37us;98us;38us;153us;39us;154us;0us;16414us;1us;32768us;1us;79us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;14us;32768us;7us;81us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;14us;32768us;7us;83us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;14us;32768us;7us;85us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;1us;32768us;2us;86us;16us;32768us;1us;137us;3us;37us;10us;139us;11us;102us;21us;155us;22us;145us;27us;57us;29us;157us;30us;104us;31us;106us;32us;52us;34us;69us;35us;78us;37us;98us;38us;153us;39us;154us;0us;16415us;0us;16416us;0us;16417us;0us;16418us;3us;16419us;2us;144us;5us;148us;9us;96us;2us;16419us;5us;148us;9us;96us;0us;16420us;1us;16420us;2us;138us;0us;16421us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;13us;16422us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;1us;16443us;1us;99us;11us;16448us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;1us;32768us;2us;101us;0us;16423us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;0us;16424us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;13us;16425us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;0us;16426us;3us;16427us;22us;125us;23us;126us;24us;127us;3us;16428us;22us;125us;23us;126us;24us;127us;0us;16429us;0us;16430us;0us;16431us;9us;16432us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;9us;16433us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;5us;16434us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;5us;16435us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;5us;16436us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;5us;16437us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;11us;16438us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;13us;32768us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;12us;16439us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;14us;32768us;6us;149us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;14us;16450us;8us;151us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;0us;16440us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;0us;16441us;3us;32768us;1us;142us;22us;145us;37us;141us;1us;16442us;5us;148us;0us;16443us;3us;32768us;1us;142us;22us;145us;37us;141us;2us;32768us;2us;144us;5us;148us;0us;16444us;8us;32768us;1us;137us;10us;139us;21us;155us;22us;145us;29us;157us;37us;141us;38us;153us;39us;154us;1us;16445us;5us;148us;0us;16446us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;0us;16447us;0us;16449us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;0us;16451us;0us;16452us;0us;16453us;1us;32768us;38us;156us;0us;16454us;0us;16455us;0us;16456us;0us;16457us;|]
let _fsyacc_actionTableRowOffsets = [|0us;4us;5us;7us;8us;12us;13us;15us;16us;17us;21us;25us;27us;28us;30us;34us;36us;40us;43us;44us;47us;48us;50us;51us;53us;55us;58us;60us;62us;63us;66us;68us;70us;71us;72us;74us;77us;78us;97us;99us;100us;116us;117us;136us;137us;139us;158us;159us;160us;162us;163us;178us;179us;192us;193us;208us;209us;210us;212us;214us;226us;238us;253us;268us;285us;302us;304us;321us;338us;339us;341us;343us;355us;367us;382us;397us;414us;431us;432us;434us;446us;461us;473us;488us;500us;515us;517us;534us;535us;536us;537us;538us;542us;545us;546us;548us;549us;561us;575us;577us;589us;591us;592us;604us;605us;617us;631us;632us;636us;640us;641us;642us;643us;653us;663us;669us;675us;681us;687us;699us;713us;726us;741us;756us;768us;780us;792us;804us;816us;828us;840us;852us;864us;876us;888us;900us;912us;913us;925us;926us;930us;932us;933us;937us;940us;941us;950us;952us;953us;965us;966us;967us;979us;980us;981us;982us;984us;985us;986us;987us;|]
let _fsyacc_reductionSymbolCounts = [|1us;2us;0us;2us;2us;1us;2us;1us;2us;3us;3us;4us;6us;6us;0us;1us;1us;3us;3us;3us;0us;2us;3us;1us;1us;2us;2us;3us;1us;7us;5us;10us;7us;5us;5us;1us;1us;1us;3us;4us;2us;2us;1us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;1us;3us;2us;1us;3us;2us;2us;4us;0us;1us;1us;3us;1us;1us;2us;1us;1us;1us;|]
let _fsyacc_productionToNonTerminalTable = [|0us;1us;2us;2us;3us;3us;4us;5us;5us;5us;5us;5us;6us;6us;7us;7us;8us;8us;9us;9us;10us;10us;10us;11us;11us;12us;12us;12us;12us;12us;12us;12us;13us;13us;13us;14us;14us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;16us;16us;16us;17us;17us;17us;17us;17us;18us;18us;19us;19us;20us;20us;20us;20us;21us;21us;|]
let _fsyacc_immediateActions = [|65535us;49152us;65535us;16385us;65535us;16387us;65535us;16388us;16389us;65535us;65535us;65535us;16391us;65535us;65535us;65535us;65535us;65535us;16393us;65535us;16394us;65535us;16395us;65535us;65535us;65535us;65535us;65535us;16396us;65535us;65535us;65535us;16397us;16399us;65535us;65535us;16401us;65535us;65535us;16402us;65535us;16403us;65535us;16405us;65535us;65535us;16406us;16407us;65535us;16408us;65535us;16409us;65535us;16410us;65535us;16411us;16412us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16413us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16414us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16415us;16416us;16417us;16418us;65535us;65535us;16420us;65535us;16421us;65535us;65535us;65535us;65535us;65535us;16423us;65535us;65535us;65535us;65535us;16426us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16440us;65535us;16441us;65535us;65535us;16443us;65535us;65535us;16444us;65535us;65535us;16446us;65535us;16447us;16449us;65535us;16451us;16452us;16453us;65535us;16454us;16455us;16456us;16457us;|]
let _fsyacc_reductions = lazy [|
# 402 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 411 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 41 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prog _1 
                   )
# 41 "Lectures/Lec06/MicroC/CPar.fsy"
                 : Absyn.program));
# 422 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 45 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               [] 
                   )
# 45 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Topdecs));
# 432 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 46 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1 :: _2 
                   )
# 46 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Topdecs));
# 444 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 50 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Topdec));
# 455 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1 
                   )
# 51 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Topdec));
# 466 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 55 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Vardec));
# 478 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 59 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Vardesc));
# 489 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 60 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Vardesc));
# 500 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _2                                      
                   )
# 61 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Vardesc));
# 511 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 62 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Vardesc));
# 522 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 63 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Vardesc));
# 534 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 67 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Fundec));
# 547 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 68 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Fundec));
# 561 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               [] 
                   )
# 72 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Paramdecs));
# 571 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1 
                   )
# 73 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Paramdecs));
# 582 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               [_1]     
                   )
# 77 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Paramdecs1));
# 593 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1 :: _3 
                   )
# 78 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Paramdecs1));
# 605 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "Lectures/Lec06/MicroC/CPar.fsy"
                                                                 Block _2 
                   )
# 82 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Block));
# 616 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 "Lectures/Lec06/MicroC/CPar.fsy"
                                                                 Block [Expr(_2)] 
                   )
# 83 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Block));
# 627 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               [] 
                   )
# 87 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 637 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 88 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 649 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 89 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 661 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1 
                   )
# 93 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Stmt));
# 672 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1 
                   )
# 94 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Stmt));
# 683 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Expr(_1)             
                   )
# 98 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtM));
# 694 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Return None          
                   )
# 99 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtM));
# 704 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 100 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtM));
# 715 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1                   
                   )
# 101 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtM));
# 726 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 102 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtM));
# 739 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               While(_3, _5)        
                   )
# 103 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtM));
# 751 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _10 = parseState.GetInput(10) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "Lectures/Lec06/MicroC/CPar.fsy"
                                                                                 
                             Block [
                                 _3;
                                 While(_5, 
                                     Block [
                                         _10;
                                         _7
                                     ]
                                 )
                             ]
                   )
# 104 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtM));
# 774 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 117 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtU));
# 787 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 118 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtU));
# 799 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               While(_3, _5)        
                   )
# 119 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtU));
# 811 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Access _1           
                   )
# 123 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Expr));
# 822 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1                  
                   )
# 124 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Expr));
# 833 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1                  
                   )
# 128 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 844 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 129 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 856 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 130 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 868 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 131 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 879 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 132 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 890 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 133 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 900 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 134 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 912 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 135 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 924 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 136 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 936 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 137 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 948 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 138 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 960 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 139 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 972 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 140 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 984 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 141 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 996 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 142 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1008 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 143 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1020 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 144 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1032 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 145 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1044 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 146 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1056 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               CstI _1             
                   )
# 150 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1067 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _2                  
                   )
# 151 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1078 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Addr _2             
                   )
# 152 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1089 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               AccVar _1           
                   )
# 156 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Access));
# 1100 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _2                  
                   )
# 157 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Access));
# 1111 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 158 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Access));
# 1122 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               AccDeref _2         
                   )
# 159 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Access));
# 1133 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 160 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Access));
# 1145 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               []       
                   )
# 164 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Exprs));
# 1155 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1       
                   )
# 165 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Exprs));
# 1166 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               [_1]     
                   )
# 169 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Exprs1));
# 1177 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1 :: _3 
                   )
# 170 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Exprs1));
# 1189 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1       
                   )
# 174 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Const));
# 1200 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1       
                   )
# 175 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Const));
# 1211 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               - _2     
                   )
# 176 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Const));
# 1222 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               -1       
                   )
# 177 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Const));
# 1232 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               TypI     
                   )
# 181 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Type));
# 1242 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               TypC     
                   )
# 182 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Type));
|]
# 1253 "Lectures/Lec06/MicroC/CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions = _fsyacc_reductions.Value;
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 43;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
