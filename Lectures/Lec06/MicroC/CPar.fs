// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "Lectures/Lec06/MicroC/CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)

open Absyn

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10

# 19 "Lectures/Lec06/MicroC/CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_StmtOrDec
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | NOT  -> 11 
  | SEQOR  -> 12 
  | SEQAND  -> 13 
  | EQ  -> 14 
  | NE  -> 15 
  | GT  -> 16 
  | LT  -> 17 
  | GE  -> 18 
  | LE  -> 19 
  | PLUS  -> 20 
  | MINUS  -> 21 
  | TIMES  -> 22 
  | DIV  -> 23 
  | MOD  -> 24 
  | CHAR  -> 25 
  | ELSE  -> 26 
  | IF  -> 27 
  | INT  -> 28 
  | NULL  -> 29 
  | PRINT  -> 30 
  | PRINTLN  -> 31 
  | RETURN  -> 32 
  | VOID  -> 33 
  | WHILE  -> 34 
  | FOR  -> 35 
  | CSTSTRING _ -> 36 
  | NAME _ -> 37 
  | CSTINT _ -> 38 
  | CSTBOOL _ -> 39 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_NOT 
  | 12 -> TOKEN_SEQOR 
  | 13 -> TOKEN_SEQAND 
  | 14 -> TOKEN_EQ 
  | 15 -> TOKEN_NE 
  | 16 -> TOKEN_GT 
  | 17 -> TOKEN_LT 
  | 18 -> TOKEN_GE 
  | 19 -> TOKEN_LE 
  | 20 -> TOKEN_PLUS 
  | 21 -> TOKEN_MINUS 
  | 22 -> TOKEN_TIMES 
  | 23 -> TOKEN_DIV 
  | 24 -> TOKEN_MOD 
  | 25 -> TOKEN_CHAR 
  | 26 -> TOKEN_ELSE 
  | 27 -> TOKEN_IF 
  | 28 -> TOKEN_INT 
  | 29 -> TOKEN_NULL 
  | 30 -> TOKEN_PRINT 
  | 31 -> TOKEN_PRINTLN 
  | 32 -> TOKEN_RETURN 
  | 33 -> TOKEN_VOID 
  | 34 -> TOKEN_WHILE 
  | 35 -> TOKEN_FOR 
  | 36 -> TOKEN_CSTSTRING 
  | 37 -> TOKEN_NAME 
  | 38 -> TOKEN_CSTINT 
  | 39 -> TOKEN_CSTBOOL 
  | 42 -> TOKEN_end_of_input
  | 40 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_StmtOrDec 
    | 23 -> NONTERM_StmtOrDec 
    | 24 -> NONTERM_Stmt 
    | 25 -> NONTERM_Stmt 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtU 
    | 34 -> NONTERM_StmtU 
    | 35 -> NONTERM_StmtU 
    | 36 -> NONTERM_Expr 
    | 37 -> NONTERM_Expr 
    | 38 -> NONTERM_ExprNotAccess 
    | 39 -> NONTERM_ExprNotAccess 
    | 40 -> NONTERM_ExprNotAccess 
    | 41 -> NONTERM_ExprNotAccess 
    | 42 -> NONTERM_ExprNotAccess 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_AtExprNotAccess 
    | 58 -> NONTERM_AtExprNotAccess 
    | 59 -> NONTERM_AtExprNotAccess 
    | 60 -> NONTERM_Access 
    | 61 -> NONTERM_Access 
    | 62 -> NONTERM_Access 
    | 63 -> NONTERM_Access 
    | 64 -> NONTERM_Access 
    | 65 -> NONTERM_Exprs 
    | 66 -> NONTERM_Exprs 
    | 67 -> NONTERM_Exprs1 
    | 68 -> NONTERM_Exprs1 
    | 69 -> NONTERM_Const 
    | 70 -> NONTERM_Const 
    | 71 -> NONTERM_Const 
    | 72 -> NONTERM_Const 
    | 73 -> NONTERM_Type 
    | 74 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 42 
let _fsyacc_tagOfErrorTerminal = 40

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us;65535us;1us;65535us;0us;1us;2us;65535us;0us;2us;4us;5us;2us;65535us;0us;4us;4us;4us;10us;65535us;0us;6us;4us;6us;25us;34us;29us;34us;35us;34us;37us;42us;40us;42us;43us;42us;80us;45us;84us;45us;4us;65535us;9us;11us;10us;11us;14us;15us;16us;17us;2us;65535us;0us;8us;4us;8us;2us;65535us;25us;26us;29us;30us;3us;65535us;25us;33us;29us;33us;35us;36us;14us;65535us;27us;28us;31us;32us;37us;57us;40us;57us;43us;57us;64us;57us;65us;57us;67us;57us;68us;57us;76us;57us;77us;57us;80us;57us;84us;57us;86us;57us;3us;65535us;37us;38us;40us;41us;43us;44us;2us;65535us;80us;81us;84us;85us;6us;65535us;37us;40us;40us;40us;43us;40us;65us;89us;80us;47us;84us;47us;12us;65535us;37us;48us;40us;48us;43us;48us;64us;66us;65us;49us;67us;69us;68us;69us;76us;78us;77us;78us;80us;48us;84us;48us;86us;87us;8us;65535us;37us;50us;40us;50us;43us;50us;65us;50us;68us;88us;77us;90us;80us;50us;84us;50us;38us;65535us;37us;51us;40us;51us;43us;51us;53us;55us;60us;63us;61us;62us;64us;51us;65us;51us;67us;51us;68us;51us;72us;75us;73us;74us;76us;51us;77us;51us;80us;51us;82us;83us;84us;51us;86us;51us;96us;97us;99us;122us;102us;103us;104us;105us;123us;107us;124us;108us;125us;109us;126us;110us;127us;111us;128us;112us;129us;113us;130us;114us;131us;115us;132us;116us;133us;117us;134us;118us;135us;120us;137us;119us;148us;121us;151us;122us;38us;65535us;37us;93us;40us;93us;43us;93us;53us;93us;60us;93us;61us;93us;64us;93us;65us;93us;67us;93us;68us;93us;72us;93us;73us;93us;76us;93us;77us;93us;80us;93us;82us;93us;84us;93us;86us;93us;96us;93us;99us;93us;102us;93us;104us;93us;123us;93us;124us;93us;125us;93us;126us;93us;127us;93us;128us;93us;129us;93us;130us;93us;131us;93us;132us;93us;133us;93us;134us;93us;135us;93us;137us;94us;148us;93us;151us;93us;39us;65535us;37us;95us;40us;95us;43us;95us;53us;95us;60us;95us;61us;95us;64us;95us;65us;95us;67us;95us;68us;95us;72us;95us;73us;95us;76us;95us;77us;95us;80us;95us;82us;95us;84us;95us;86us;95us;96us;95us;99us;95us;102us;95us;104us;95us;123us;95us;124us;95us;125us;95us;126us;95us;127us;95us;128us;95us;129us;95us;130us;95us;131us;95us;132us;95us;133us;95us;134us;95us;135us;95us;137us;95us;145us;147us;148us;95us;151us;95us;41us;65535us;37us;92us;40us;92us;43us;92us;53us;92us;60us;92us;61us;92us;64us;92us;65us;92us;67us;92us;68us;92us;72us;92us;73us;92us;76us;92us;77us;92us;80us;92us;82us;92us;84us;92us;86us;92us;96us;92us;99us;92us;102us;92us;104us;92us;123us;92us;124us;92us;125us;92us;126us;92us;127us;92us;128us;92us;129us;92us;130us;92us;131us;92us;132us;92us;133us;92us;134us;92us;135us;92us;137us;91us;139us;140us;142us;143us;145us;146us;148us;92us;151us;92us;1us;65535us;99us;100us;2us;65535us;99us;150us;151us;152us;39us;65535us;37us;136us;40us;136us;43us;136us;53us;136us;60us;136us;61us;136us;64us;136us;65us;136us;67us;136us;68us;136us;72us;136us;73us;136us;76us;136us;77us;136us;80us;136us;82us;136us;84us;136us;86us;136us;96us;136us;99us;136us;102us;136us;104us;136us;123us;136us;124us;136us;125us;136us;126us;136us;127us;136us;128us;136us;129us;136us;130us;136us;131us;136us;132us;136us;133us;136us;134us;136us;135us;136us;137us;136us;145us;136us;148us;136us;151us;136us;10us;65535us;0us;10us;4us;10us;25us;9us;29us;9us;35us;9us;37us;9us;40us;9us;43us;9us;80us;9us;84us;9us;|]
let _fsyacc_sparseGotoTableRowOffsets = [|0us;1us;3us;6us;9us;20us;25us;28us;31us;35us;50us;54us;57us;64us;77us;86us;125us;164us;204us;246us;248us;251us;291us;|]
let _fsyacc_stateToProdIdxsTableElements = [| 1us;0us;1us;0us;1us;1us;1us;1us;1us;3us;1us;3us;1us;4us;1us;4us;1us;5us;1us;6us;2us;6us;13us;3us;6us;10us;11us;1us;7us;2us;7us;13us;1us;8us;3us;8us;10us;11us;1us;9us;3us;9us;10us;11us;1us;9us;2us;10us;11us;1us;10us;1us;11us;1us;11us;1us;12us;1us;12us;1us;12us;1us;12us;1us;12us;1us;12us;1us;13us;1us;13us;1us;13us;1us;13us;1us;15us;2us;16us;17us;1us;17us;1us;17us;1us;18us;1us;18us;1us;18us;1us;20us;1us;20us;1us;21us;1us;21us;1us;21us;1us;22us;1us;22us;1us;23us;1us;24us;3us;24us;30us;33us;1us;25us;14us;26us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;1us;26us;2us;27us;28us;1us;27us;14us;28us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;1us;28us;1us;29us;1us;30us;3us;30us;33us;34us;1us;30us;3us;30us;33us;34us;16us;30us;33us;34us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;14us;30us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;1us;30us;3us;30us;33us;34us;1us;30us;1us;30us;2us;30us;33us;1us;30us;1us;31us;2us;31us;35us;1us;31us;2us;31us;35us;15us;31us;35us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;14us;31us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;1us;31us;2us;31us;35us;1us;31us;1us;32us;1us;32us;1us;32us;1us;32us;14us;32us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;1us;32us;1us;32us;1us;32us;1us;32us;1us;33us;1us;34us;1us;35us;4us;36us;39us;61us;64us;3us;36us;39us;64us;1us;37us;2us;37us;58us;1us;38us;1us;39us;14us;39us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;2us;40us;60us;1us;40us;1us;40us;1us;40us;1us;41us;14us;41us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;1us;42us;14us;42us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;1us;43us;14us;44us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;14us;44us;45us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;14us;44us;45us;46us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;14us;44us;45us;46us;47us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;14us;44us;45us;46us;47us;48us;48us;49us;50us;51us;52us;53us;54us;55us;56us;14us;44us;45us;46us;47us;48us;49us;49us;50us;51us;52us;53us;54us;55us;56us;14us;44us;45us;46us;47us;48us;49us;50us;50us;51us;52us;53us;54us;55us;56us;14us;44us;45us;46us;47us;48us;49us;50us;51us;51us;52us;53us;54us;55us;56us;14us;44us;45us;46us;47us;48us;49us;50us;51us;52us;52us;53us;54us;55us;56us;14us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;53us;54us;55us;56us;14us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;54us;55us;56us;14us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;55us;56us;13us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;14us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;56us;14us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;64us;15us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;55us;56us;67us;68us;1us;44us;1us;45us;1us;46us;1us;47us;1us;48us;1us;49us;1us;50us;1us;51us;1us;52us;1us;53us;1us;54us;1us;55us;1us;56us;1us;57us;2us;58us;61us;1us;58us;1us;59us;2us;59us;64us;1us;60us;1us;61us;2us;61us;64us;1us;61us;2us;62us;63us;2us;62us;64us;1us;63us;1us;64us;1us;64us;1us;66us;1us;68us;1us;68us;1us;69us;1us;70us;1us;71us;1us;71us;1us;72us;1us;73us;1us;74us;|]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us;2us;4us;6us;8us;10us;12us;14us;16us;18us;20us;23us;27us;29us;32us;34us;38us;40us;44us;46us;49us;51us;53us;55us;57us;59us;61us;63us;65us;67us;69us;71us;73us;75us;77us;80us;82us;84us;86us;88us;90us;92us;94us;96us;98us;100us;102us;104us;106us;108us;112us;114us;129us;131us;134us;136us;151us;153us;155us;157us;161us;163us;167us;184us;199us;201us;205us;207us;209us;212us;214us;216us;219us;221us;224us;240us;255us;257us;260us;262us;264us;266us;268us;270us;285us;287us;289us;291us;293us;295us;297us;299us;304us;308us;310us;313us;315us;317us;332us;335us;337us;339us;341us;343us;358us;360us;375us;377us;392us;407us;422us;437us;452us;467us;482us;497us;512us;527us;542us;557us;571us;586us;601us;617us;619us;621us;623us;625us;627us;629us;631us;633us;635us;637us;639us;641us;643us;645us;648us;650us;652us;655us;657us;659us;662us;664us;667us;670us;672us;674us;676us;678us;680us;682us;684us;686us;688us;690us;692us;694us;|]
let _fsyacc_action_rows = 160
let _fsyacc_actionTableElements = [|3us;16386us;25us;159us;28us;158us;33us;23us;0us;49152us;1us;32768us;0us;3us;0us;16385us;3us;16386us;25us;159us;28us;158us;33us;23us;0us;16387us;1us;32768us;7us;7us;0us;16388us;0us;16389us;3us;32768us;1us;16us;22us;14us;37us;12us;3us;32768us;1us;16us;22us;14us;37us;13us;1us;16390us;5us;19us;0us;16391us;1us;16391us;1us;29us;3us;32768us;1us;16us;22us;14us;37us;12us;1us;16392us;5us;19us;3us;32768us;1us;16us;22us;14us;37us;12us;2us;32768us;2us;18us;5us;19us;0us;16393us;2us;32768us;6us;20us;38us;21us;0us;16394us;1us;32768us;6us;22us;0us;16395us;1us;32768us;37us;24us;1us;32768us;1us;25us;2us;16398us;25us;159us;28us;158us;1us;32768us;2us;27us;1us;32768us;3us;37us;0us;16396us;2us;16398us;25us;159us;28us;158us;1us;32768us;2us;31us;1us;32768us;3us;37us;0us;16397us;0us;16399us;1us;16400us;8us;35us;2us;32768us;25us;159us;28us;158us;0us;16401us;18us;16403us;1us;137us;3us;37us;10us;139us;11us;102us;21us;155us;22us;145us;25us;159us;27us;59us;28us;158us;29us;157us;30us;104us;31us;106us;32us;53us;34us;71us;35us;79us;37us;98us;38us;153us;39us;154us;1us;32768us;4us;39us;0us;16402us;18us;16403us;1us;137us;3us;37us;10us;139us;11us;102us;21us;155us;22us;145us;25us;159us;27us;59us;28us;158us;29us;157us;30us;104us;31us;106us;32us;53us;34us;71us;35us;79us;37us;98us;38us;153us;39us;154us;0us;16404us;1us;32768us;7us;43us;18us;16403us;1us;137us;3us;37us;10us;139us;11us;102us;21us;155us;22us;145us;25us;159us;27us;59us;28us;158us;29us;157us;30us;104us;31us;106us;32us;53us;34us;71us;35us;79us;37us;98us;38us;153us;39us;154us;0us;16405us;1us;32768us;7us;46us;0us;16406us;0us;16407us;0us;16408us;1us;16408us;26us;68us;0us;16409us;14us;32768us;7us;52us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;0us;16410us;12us;32768us;1us;137us;7us;54us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;0us;16411us;14us;32768us;7us;56us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;0us;16412us;0us;16413us;1us;32768us;1us;60us;1us;32768us;1us;61us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;14us;32768us;2us;65us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;14us;32768us;2us;64us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;16us;32768us;1us;137us;3us;37us;10us;139us;11us;102us;21us;155us;22us;145us;27us;58us;29us;157us;30us;104us;31us;106us;32us;53us;34us;70us;35us;79us;37us;98us;38us;153us;39us;154us;16us;32768us;1us;137us;3us;37us;10us;139us;11us;102us;21us;155us;22us;145us;27us;59us;29us;157us;30us;104us;31us;106us;32us;53us;34us;71us;35us;79us;37us;98us;38us;153us;39us;154us;1us;32768us;26us;67us;16us;32768us;1us;137us;3us;37us;10us;139us;11us;102us;21us;155us;22us;145us;27us;58us;29us;157us;30us;104us;31us;106us;32us;53us;34us;70us;35us;79us;37us;98us;38us;153us;39us;154us;16us;32768us;1us;137us;3us;37us;10us;139us;11us;102us;21us;155us;22us;145us;27us;59us;29us;157us;30us;104us;31us;106us;32us;53us;34us;71us;35us;79us;37us;98us;38us;153us;39us;154us;0us;16414us;1us;32768us;1us;72us;1us;32768us;1us;73us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;14us;32768us;2us;77us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;14us;32768us;2us;76us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;16us;32768us;1us;137us;3us;37us;10us;139us;11us;102us;21us;155us;22us;145us;27us;58us;29us;157us;30us;104us;31us;106us;32us;53us;34us;70us;35us;79us;37us;98us;38us;153us;39us;154us;16us;32768us;1us;137us;3us;37us;10us;139us;11us;102us;21us;155us;22us;145us;27us;59us;29us;157us;30us;104us;31us;106us;32us;53us;34us;71us;35us;79us;37us;98us;38us;153us;39us;154us;0us;16415us;1us;32768us;1us;80us;18us;32768us;1us;137us;3us;37us;10us;139us;11us;102us;21us;155us;22us;145us;25us;159us;27us;59us;28us;158us;29us;157us;30us;104us;31us;106us;32us;53us;34us;71us;35us;79us;37us;98us;38us;153us;39us;154us;1us;32768us;7us;82us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;14us;32768us;7us;84us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;18us;32768us;1us;137us;3us;37us;10us;139us;11us;102us;21us;155us;22us;145us;25us;159us;27us;59us;28us;158us;29us;157us;30us;104us;31us;106us;32us;53us;34us;71us;35us;79us;37us;98us;38us;153us;39us;154us;1us;32768us;2us;86us;16us;32768us;1us;137us;3us;37us;10us;139us;11us;102us;21us;155us;22us;145us;27us;58us;29us;157us;30us;104us;31us;106us;32us;53us;34us;70us;35us;79us;37us;98us;38us;153us;39us;154us;0us;16416us;0us;16417us;0us;16418us;0us;16419us;3us;16420us;2us;144us;5us;148us;9us;96us;2us;16420us;5us;148us;9us;96us;0us;16421us;1us;16421us;2us;138us;0us;16422us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;13us;16423us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;1us;16444us;1us;99us;11us;16449us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;1us;32768us;2us;101us;0us;16424us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;0us;16425us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;13us;16426us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;0us;16427us;3us;16428us;22us;125us;23us;126us;24us;127us;3us;16429us;22us;125us;23us;126us;24us;127us;0us;16430us;0us;16431us;0us;16432us;9us;16433us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;9us;16434us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;5us;16435us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;5us;16436us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;5us;16437us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;5us;16438us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;11us;16439us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;13us;32768us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;12us;16440us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;14us;32768us;6us;149us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;14us;16451us;8us;151us;12us;135us;13us;134us;14us;128us;15us;129us;16us;130us;17us;131us;18us;132us;19us;133us;20us;123us;21us;124us;22us;125us;23us;126us;24us;127us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;0us;16441us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;0us;16442us;3us;32768us;1us;142us;22us;145us;37us;141us;1us;16443us;5us;148us;0us;16444us;3us;32768us;1us;142us;22us;145us;37us;141us;2us;32768us;2us;144us;5us;148us;0us;16445us;8us;32768us;1us;137us;10us;139us;21us;155us;22us;145us;29us;157us;37us;141us;38us;153us;39us;154us;1us;16446us;5us;148us;0us;16447us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;0us;16448us;0us;16450us;11us;32768us;1us;137us;10us;139us;11us;102us;21us;155us;22us;145us;29us;157us;30us;104us;31us;106us;37us;98us;38us;153us;39us;154us;0us;16452us;0us;16453us;0us;16454us;1us;32768us;38us;156us;0us;16455us;0us;16456us;0us;16457us;0us;16458us;|]
let _fsyacc_actionTableRowOffsets = [|0us;4us;5us;7us;8us;12us;13us;15us;16us;17us;21us;25us;27us;28us;30us;34us;36us;40us;43us;44us;47us;48us;50us;51us;53us;55us;58us;60us;62us;63us;66us;68us;70us;71us;72us;74us;77us;78us;97us;99us;100us;119us;120us;122us;141us;142us;144us;145us;146us;147us;149us;150us;165us;166us;179us;180us;195us;196us;197us;199us;201us;213us;225us;240us;255us;272us;289us;291us;308us;325us;326us;328us;330us;342us;354us;369us;384us;401us;418us;419us;421us;440us;442us;454us;469us;488us;490us;507us;508us;509us;510us;511us;515us;518us;519us;521us;522us;534us;548us;550us;562us;564us;565us;577us;578us;590us;604us;605us;609us;613us;614us;615us;616us;626us;636us;642us;648us;654us;660us;672us;686us;699us;714us;729us;741us;753us;765us;777us;789us;801us;813us;825us;837us;849us;861us;873us;885us;886us;898us;899us;903us;905us;906us;910us;913us;914us;923us;925us;926us;938us;939us;940us;952us;953us;954us;955us;957us;958us;959us;960us;|]
let _fsyacc_reductionSymbolCounts = [|1us;2us;0us;2us;2us;1us;2us;1us;2us;3us;3us;4us;6us;6us;0us;1us;1us;3us;3us;0us;2us;3us;2us;1us;1us;1us;2us;2us;3us;1us;7us;5us;9us;7us;5us;5us;1us;1us;1us;3us;4us;2us;2us;1us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;1us;3us;2us;1us;3us;2us;2us;4us;0us;1us;1us;3us;1us;1us;2us;1us;1us;1us;|]
let _fsyacc_productionToNonTerminalTable = [|0us;1us;2us;2us;3us;3us;4us;5us;5us;5us;5us;5us;6us;6us;7us;7us;8us;8us;9us;10us;10us;10us;11us;11us;12us;12us;13us;13us;13us;13us;13us;13us;13us;14us;14us;14us;15us;15us;16us;16us;16us;16us;16us;16us;16us;16us;16us;16us;16us;16us;16us;16us;16us;16us;16us;16us;16us;17us;17us;17us;18us;18us;18us;18us;18us;19us;19us;20us;20us;21us;21us;21us;21us;22us;22us;|]
let _fsyacc_immediateActions = [|65535us;49152us;65535us;16385us;65535us;16387us;65535us;16388us;16389us;65535us;65535us;65535us;16391us;65535us;65535us;65535us;65535us;65535us;16393us;65535us;16394us;65535us;16395us;65535us;65535us;65535us;65535us;65535us;16396us;65535us;65535us;65535us;16397us;16399us;65535us;65535us;16401us;65535us;65535us;16402us;65535us;16404us;65535us;65535us;16405us;65535us;16406us;16407us;16408us;65535us;16409us;65535us;16410us;65535us;16411us;65535us;16412us;16413us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16414us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16415us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16416us;16417us;16418us;16419us;65535us;65535us;16421us;65535us;16422us;65535us;65535us;65535us;65535us;65535us;16424us;65535us;65535us;65535us;65535us;16427us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16441us;65535us;16442us;65535us;65535us;16444us;65535us;65535us;16445us;65535us;65535us;16447us;65535us;16448us;16450us;65535us;16452us;16453us;16454us;65535us;16455us;16456us;16457us;16458us;|]
let _fsyacc_reductions = lazy [|
# 404 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 413 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 41 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prog _1 
                   )
# 41 "Lectures/Lec06/MicroC/CPar.fsy"
                 : Absyn.program));
# 424 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 45 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               [] 
                   )
# 45 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Topdecs));
# 434 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 46 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1 :: _2 
                   )
# 46 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Topdecs));
# 446 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 50 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Topdec));
# 457 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1 
                   )
# 51 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Topdec));
# 468 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 55 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Vardec));
# 480 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 59 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Vardesc));
# 491 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 60 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Vardesc));
# 502 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _2                                      
                   )
# 61 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Vardesc));
# 513 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 62 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Vardesc));
# 524 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 63 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Vardesc));
# 536 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 67 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Fundec));
# 549 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 68 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Fundec));
# 563 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               [] 
                   )
# 72 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Paramdecs));
# 573 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1 
                   )
# 73 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Paramdecs));
# 584 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               [_1]     
                   )
# 77 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Paramdecs1));
# 595 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1 :: _3 
                   )
# 78 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Paramdecs1));
# 607 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Block _2 
                   )
# 82 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Block));
# 618 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               [] 
                   )
# 86 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 628 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 87 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 640 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 88 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 652 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Dec (fst _1, snd _1) 
                   )
# 92 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtOrDec));
# 663 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Stmt _1 
                   )
# 93 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtOrDec));
# 674 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1 
                   )
# 97 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Stmt));
# 685 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1 
                   )
# 98 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Stmt));
# 696 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Expr(_1)             
                   )
# 102 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtM));
# 707 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Return None          
                   )
# 103 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtM));
# 717 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 104 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtM));
# 728 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1                   
                   )
# 105 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtM));
# 739 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 106 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtM));
# 752 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               While(_3, _5)        
                   )
# 107 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtM));
# 764 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDec in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtOrDec in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "Lectures/Lec06/MicroC/CPar.fsy"
                                                                                     
                             Block [
                                 _3;
                                 Stmt(While(_5, Block [Stmt(_9); _7]))
                             ]
                         
                   )
# 108 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtM));
# 783 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 117 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtU));
# 796 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 118 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtU));
# 808 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               While(_3, _5)        
                   )
# 119 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_StmtU));
# 820 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Access _1           
                   )
# 123 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Expr));
# 831 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1                  
                   )
# 124 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Expr));
# 842 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1                  
                   )
# 128 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 853 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 129 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 865 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 130 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 877 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 131 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 888 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 132 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 899 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 133 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 909 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 134 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 921 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 135 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 933 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 136 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 945 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 137 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 957 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 138 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 969 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 139 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 981 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 140 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 993 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 141 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1005 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 142 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1017 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 143 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1029 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 144 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1041 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 145 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1053 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 146 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1065 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               CstI _1             
                   )
# 150 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1076 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _2                  
                   )
# 151 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1087 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               Addr _2             
                   )
# 152 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1098 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               AccVar _1           
                   )
# 156 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Access));
# 1109 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _2                  
                   )
# 157 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Access));
# 1120 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 158 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Access));
# 1131 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               AccDeref _2         
                   )
# 159 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Access));
# 1142 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 160 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Access));
# 1154 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               []       
                   )
# 164 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Exprs));
# 1164 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1       
                   )
# 165 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Exprs));
# 1175 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               [_1]     
                   )
# 169 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Exprs1));
# 1186 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1 :: _3 
                   )
# 170 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Exprs1));
# 1198 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1       
                   )
# 174 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Const));
# 1209 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               _1       
                   )
# 175 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Const));
# 1220 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               - _2     
                   )
# 176 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Const));
# 1231 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               -1       
                   )
# 177 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Const));
# 1241 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               TypI     
                   )
# 181 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Type));
# 1251 "Lectures/Lec06/MicroC/CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "Lectures/Lec06/MicroC/CPar.fsy"
                                                               TypC     
                   )
# 182 "Lectures/Lec06/MicroC/CPar.fsy"
                 : 'gentype_Type));
|]
# 1262 "Lectures/Lec06/MicroC/CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions = _fsyacc_reductions.Value;
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 43;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
